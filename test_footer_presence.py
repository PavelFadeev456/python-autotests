from selenium import webdriver
from selenium.webdriver.common.by import By
from selenium.webdriver.chrome.service import Service
from selenium.webdriver.support.ui import WebDriverWait
from selenium.webdriver.support import expected_conditions as EC
from selenium.common.exceptions import NoSuchElementException, WebDriverException
import time
import traceback

PAGES = [
    "https://only.digital/",
    "https://only.digital/projects",
    "https://only.digital/company",
    "https://only.digital/fields",
    "https://only.digital/job",
    "https://only.digital/blog",
    "https://only.digital/contacts"
]

def init_driver():
    options = webdriver.ChromeOptions()
    options.add_argument("--start-maximized")
    options.add_argument(
        "user-agent=Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/124.0.0.0 Safari/537.36"
    )
    service = Service()
    return webdriver.Chrome(service=service, options=options)

def check_footer_elements(driver, url):
    print(f"\nüîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—ã: {url}")
    try:
        driver.get(url)
        WebDriverWait(driver, 10).until(EC.presence_of_element_located((By.TAG_NAME, "footer")))
        footer = driver.find_element(By.TAG_NAME, "footer")
        print("–§—É—Ç–µ—Ä –Ω–∞–π–¥–µ–Ω")

        # –õ–æ–≥–æ—Ç–∏–ø
        try:
            footer.find_element(By.CSS_SELECTOR, "img, svg")
            print("–õ–æ–≥–æ—Ç–∏–ø/–∏–∫–æ–Ω–∫–∞ –Ω–∞–π–¥–µ–Ω—ã")
        except NoSuchElementException:
            print("–õ–æ–≥–æ—Ç–∏–ø –Ω–µ –Ω–∞–π–¥–µ–Ω")

        # –ö–æ–Ω—Ç–∞–∫—Ç—ã
        try:
            contact = footer.find_element(By.XPATH, ".//*[contains(text(), '@') or contains(text(), '+')]")
            print(f"–ö–æ–Ω—Ç–∞–∫—Ç–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –Ω–∞–π–¥–µ–Ω–∞: {contact.text}")
        except NoSuchElementException:
            print("–ö–æ–Ω—Ç–∞–∫—Ç–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω–∞")

        # –°—Å—ã–ª–∫–∏
        links = footer.find_elements(By.TAG_NAME, "a")
        print(f"–ù–∞–π–¥–µ–Ω–æ —Å—Å—ã–ª–æ–∫ –≤ —Ñ—É—Ç–µ—Ä–µ: {len(links)}" if links else "–°—Å—ã–ª–∫–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã")

    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ {url}: {str(e)}")
        traceback.print_exc()

def main():
    for page in PAGES:
        try:
            driver = init_driver()
            check_footer_elements(driver, page)
            time.sleep(2)
            driver.quit()
        except WebDriverException as e:
            print(f"–û—à–∏–±–∫–∞ –¥—Ä–∞–π–≤–µ—Ä–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ {page}: {e}")
            traceback.print_exc()

    print("\n –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞")

if __name__ == "__main__":
    main()



